import geopandas as gpd
import matplotlib.pyplot as plt
import pandas as pd
from shapely.geometry import Point
from geopandas import GeoDataFrame

# Specify the path to the shapefile
path = r"../data/bgd_nhr_floods_barc"

# Read the shapefile into a GeoDataFrame
gdf = gpd.read_file(path)

# Check the CRS of the GeoDataFrame
print("CRS:", gdf.crs)

# Display the first few rows of the GeoDataFrame
#print(gdf.head())

path_roads = r"../data/_roads3.csv"

df = pd.read_csv(path_roads)
# Keep only the specified columns
df = df[['lon', 'lat', 'road', 'chainage']]

# Convert the 'df' DataFrame to a GeoDataFrame
geometry = [Point(xy) for xy in zip(df['lon'], df['lat'])]
df_geo = GeoDataFrame(df, geometry=geometry, crs="EPSG:4326")  # Ensure CRS matches gdf

# Perform a spatial join with gdf
merged_gdf = gpd.sjoin(df_geo, gdf, how="inner", predicate="intersects")


# Define the mapping of FLOODCAT values to their descriptions
floodcat_mapping = {
    0: "Not Flood Prone",
    1: "Severe River Flooding",
    2: "Moderate River Flooding",
    3: "Low River Flooding",
    4: "Severe Flash Flooding",
    5: "Moderate Flash Flooding",
    6: "Low Flash Flooding",
    7: "Severe Tidal Surge",
    8: "Moderate Tidal Surge"
}

# Group by 'road' and calculate the average FLOODCAT
average_flood_score = (
    merged_gdf.groupby('road')
    .agg(
        avg_flood_score=('FLOODCAT', 'mean')  # Calculate the average FLOODCAT
    )
    .reset_index()
)

# Assign the closest flood category based on the average score
def assign_closest_category(avg_score):
    # Find the closest FLOODCAT value
    closest_category = min(floodcat_mapping.keys(), key=lambda x: abs(avg_score - x))
    return floodcat_mapping[closest_category]

# Apply the function to assign the closest flood category
average_flood_score['closest_flood_category'] = average_flood_score['avg_flood_score'].apply(assign_closest_category)

# Display the final table
print(average_flood_score)

# # Save the table to a CSV file
average_flood_score.to_csv("../data/road_flood_scores.csv", index=False)

print("The road flood scores have been saved to '../data/road_flood_scores.csv'.")

